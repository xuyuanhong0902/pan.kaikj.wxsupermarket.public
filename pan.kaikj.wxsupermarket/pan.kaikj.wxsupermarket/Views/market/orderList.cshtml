<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="description" content="" />
    <meta name="keywords" content="" />
    <title>茶部落</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="/Content/amazeui.min.css" type="text/css" rel="stylesheet" />
    <link href="/Content/style.css" type="text/css" rel="stylesheet" />
    <script src="/Scripts/jquery.min.js" type="text/javascript"></script>
    <script src="/Scripts/amazeui.min.js" type="text/javascript"></script>
    <link href="~/Content/commMarkt.css" rel="stylesheet" />
    <script src="~/Scripts/comm.js"></script>
</head>
<body>
    <header data-am-widget="header" class="am-header am-header-default sq-head ">
        <div class="am-header-left am-header-nav">
            <a href="javascript:history.back()" class="" style="border: 0;">
                <i class="am-icon-chevron-left"></i>
            </a>
        </div>
        <h1 class="am-header-title">
            <a href="" class="" style="color: #ffffff;line-height:49px;">订单管理</a>
        </h1>
        <div class="am-header-right am-header-nav">
        </div>
    </header>
    <div style="height: 49px;"></div>
    <ul class="address-list" id="orderListCount">
        @*<li class="curr">
                <p>下单时间：2018-11-13 09:09:09</p>
                <p>订单状态：配送中</p>
                <p>订单号：898989</p>
                <p>产品名称：测试</p>
                <p>订单金额：￥8888</p>
                <hr />
                <div class="address-cz">
                    <a href="">查看详情</a>
                    <a href="">确认收货</a>
                </div>
            </li>*@
    </ul>
    <div class="botCount" id="botCount">
        <script type="text/javascript">
            //// 底部事件
            $(function () {
                initBotom(3);
            });
        </script>
    </div>
</body>
</html>

<script type="text/javascript">
    var gPageSize = 20;
    var i = 1; //设置当前页数，全局变量
    var finished = false;
    var dataUrl = '';
    var hasGetAllData = false;
    $(function () {
        //根据页数读取数据
        function getData(pagenumber) {


            $.ajax({
                cache: true,//保留缓存数据
                type: "get",//为post请求
                url: "/market/GetOrderInfoPagList",//这是我在后台接受数据的文件名
                data: "pagIndex=" + pagenumber,//将该表单序列化
                async: true,//设置成true，这标志着在请求开始后，其他代码依然能够执行。如果把这个选项设置成false，这意味着所有的请求都不再是异步的了，这也会导致浏览器被锁死
                error: function (request) {//请求失败之后的操作
                    alert("操作失败！");
                },
                success: function (data) {//请求成功之后的操作
                    if (data) {
                        if (data == "-1") {
                            alert("请先登录！");
                            window.location.href = '../market/userCenter';
                        }
                        var dataObj = $.parseJSON(data);
                        if (dataObj) {
                            pagIndex = parseInt(dataObj["pagIndex"]);
                            var totalPage = parseInt(dataObj["totalPage"]);
                            if (pagIndex  >= totalPage) {
                                hasGetAllData = true;
                            }

                           var modelList = dataObj["dataList"];

                            if (modelList && modelList.length > 0) {
                                var html = "";
                                for (var i = 0; i < modelList.length; i++) {
                                    if ($("#" + modelList[i]["orderid"]).length < 1) {
                                        var opertHtml = "";
                                        if (modelList[i]["orderState"]=="7") {
                                            opertHtml = opertHtml + '<a href="#" onclick=confirm("' + modelList[i]["orderid"] + '") > 确认收货</a >';
                                        }

                                        if (modelList[i]["orderState"] == "4") {
                                            opertHtml = opertHtml + '<a href="#" onclick=cancel("' + modelList[i]["orderid"] + '") > 取消订单</a >';
                                        }

                                       
                                        html = html + ' <li class="curr" id="' + modelList[i]["orderid"] + '">\
                                                     <p> 下单时间：'+ modelList[i]["great_time"] + '</p >\
                                                         <p id="orderState'+ modelList[i]["orderid"] + '">订单状态：' + modelList[i]["orderStateDesc"] + '</p>\
                                                         <p>订单号：'+ modelList[i]["orderid"] + '</p>\
                                                         <p>产品名称：'+ modelList[i]["productname"] + '</p>\
                                                         <p>订单金额：￥'+ modelList[i]["totalPrice"] + '</p>\
                                                         <hr />\
                                                         <div class="address-cz">\
                                                             <a href="/market/orderDetail?id='+ modelList[i]["orderid"] + '">查看详情</a>\
                                                            '+opertHtml+'</div>\
                                                      </li >';
                                    }
                                }
                                $("#orderListCount").append(html);
                            }
                        }
                    }

                }
            });

            i++; //页码自动增加，保证下次调用时为新的一页。
        }

        //核心代码
        var winH = $(window).height(); //页面可视区域高度
        var scrollHandler = function () {
            var pageH = $(document.body).height();
            var scrollT = $(window).scrollTop(); //滚动条top
            var aa = (pageH - winH - scrollT) / winH;
            if (hasGetAllData) {
                return;
            }
            if (!finished && aa < 0.2) { //0.02是个参数
                if (i % 20 === 0) { //每20页做一次停顿
                    getData(i);
                   ////$(window).unbind('scroll');
                   ////$("#btn_Page").show();
                } else {
                    getData(i);
                    finished = true;
                    setTimeout(function () { finished = false; }, 500);
                   //// $("#btn_Page").hide();
                }
            }
        }

        //初始化加载第一页数据
        getData(1);

        //定义鼠标滚动事件
        $(window).scroll(scrollHandler);

        //继续加载按钮事件
        $("#btn_Page").click(function () {
            getData(i);
            $(window).scroll(scrollHandler);
        });

    });

    function confirm(id) {
        $.ajax({
            cache: false,//保留缓存数据
            type: "get",//为post请求
            url: "/market/ConfirmGoodes",//这是我在后台接受数据的文件名
            data: {
                id: id
            },//将该表单序列化
            async: true,//设置成true，这标志着在请求开始后，其他代码依然能够执行。如果把这个选项设置成false，这意味着所有的请求都不再是异步的了，这也会导致浏览器被锁死
            error: function (request) {//请求失败之后的操作
                alert("操作失败！");
                return false;
            },
            success: function (data) {//请求成功之后的操作
                if (data == "-1") {
                    alert("请先登录");
                    window.location.href = '../market/userCenter';
                    return false;
                } else {
                    if (data) {
                        var dataObj = $.parseJSON(data);
                        if (dataObj) {
                            alert(dataObj["errmsg"]);
                            if (dataObj["errcode"] == "0") {
                                location.reload();
                            }
                        }
                    } else {
                        alert("操作失败！");
                        return false;
                    }
                }
            }
        });
    }

    function cancel(id) {
        $.ajax({
            cache: false,//保留缓存数据
            type: "get",//为post请求
            url: "/market/CancleOrder",//这是我在后台接受数据的文件名
            data: {
                id: id
            },//将该表单序列化
            async: true,//设置成true，这标志着在请求开始后，其他代码依然能够执行。如果把这个选项设置成false，这意味着所有的请求都不再是异步的了，这也会导致浏览器被锁死
            error: function (request) {//请求失败之后的操作
                alert("操作失败！");
                return false;
            },
            success: function (data) {//请求成功之后的操作
                if (data == "-1") {
                    alert("请先登录");
                    window.location.href = '../market/userCenter';
                    return false;
                } else {
                    if (data) {
                        var dataObj = $.parseJSON(data);
                        if (dataObj) {
                            alert(dataObj["errmsg"]);
                            if (dataObj["errcode"] == "0") {
                                location.reload();
                            }
                        }
                    } else {
                        alert("操作失败！");
                        return false;
                    }
                }
            }
        });
    }
</script>
